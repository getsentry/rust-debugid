name: CI

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy, rust-docs

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --workspace --tests --examples -- -D clippy::all

      - name: Run cargo doc
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        with:
          command: doc
          args: --workspace --all-features --no-deps --document-private-items

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    name: Test using Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: -Dwarnings
        with:
          command: test
          args: --workspace --all-features

  MSRV:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [1.46.0]

    name: Test MSRV on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: -Dwarnings
        with:
          command: test
          args: --workspace --all-features

  codecov:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview
          override: true

      - uses: Swatinem/rust-cache@v1

      - uses: Swatinem/fucov@v1
        with:
          args: --workspace --all-features

      - uses: codecov/codecov-action@e156083f13aff6830c92fc5faa23505779fbf649
        with:
          directory: coverage
